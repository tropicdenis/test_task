{"version":3,"sources":["components/Blog/Blog.tsx","components/CreatePost/CreatePost.tsx","components/Post/Post.tsx","components/404/Component404.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Blog","props","useState","isRedirectToCreate","setRedirectToCreate","to","className","Typography","variant","posts","map","post","id","title","message","date","toLocaleString","Button","color","onClick","CreatePost","isSubmited","setSubmit","useForm","register","handleSubmit","onSubmit","data","addPost","type","value","Post","postId","useParams","currentPost","find","Component404","ADD_POST","initialState","v1","Date","reducer","state","action","newPost","App","useReducer","dispatch","onAddMessage","addTaskAC","exact","path","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a54516.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Blog.css';\r\nimport {Button, Typography} from '@material-ui/core';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport {MessageType} from \"../../App\";\r\n\r\nexport type BlogPropsType = {\r\n     posts: Array<MessageType>\r\n}\r\n\r\nfunction Blog(props: BlogPropsType) {\r\n    const [isRedirectToCreate, setRedirectToCreate] = useState(false);\r\n   /* const [isShowPost, setShowPost] = useState (false);*/\r\n\r\n    const onAddMessage = ()=> {\r\n        setRedirectToCreate(true);\r\n    }\r\n    if (isRedirectToCreate) {\r\n        return (<Redirect to={\"/create_post\"}/>)\r\n    }\r\n\r\n   /* const showPost = (id:string) => {\r\n        setShowPost(true)\r\n    }\r\n    if (isShowPost) {\r\n        return (<Redirect to={\"/post/:id\"}/>)\r\n    }*/\r\n\r\n    return (\r\n        <div className={\"main\"}>\r\n            <div className={\"header\"}>\r\n                <Typography variant=\"h3\">\r\n                    Test Blog\r\n                </Typography>\r\n            </div>\r\n            <div className={\"messages\"}>\r\n                {props.posts.map(post => (\r\n                    <NavLink to={'/post/' + post.id}>\r\n                        <div className={\"post\"}>\r\n                            <div>\r\n                               {post.title}\r\n                            </div>\r\n                            <div>\r\n                                {post.message}\r\n                            </div>\r\n                           <div>\r\n                              {post.date.toLocaleString()}\r\n                           </div>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n\r\n                ))}\r\n            </div>\r\n            <div className={\"button\"}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onAddMessage}>Add Message</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n","import React, {useState} from 'react';\r\nimport {Button,Typography} from '@material-ui/core';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Redirect, NavLink} from 'react-router-dom'\r\n\r\ntype Inputs = {\r\n    title: string,\r\n    message: string,\r\n};\r\n\r\nexport type CreatePostPropsType = {\r\n    addPost: (title: string, message: string) => void\r\n}\r\n\r\nfunction CreatePost(props: CreatePostPropsType) {\r\n    const [isSubmited, setSubmit] = useState(false)\r\n    const {register, handleSubmit} = useForm<Inputs>();\r\n    const onSubmit = (data: Inputs) => {\r\n        props.addPost(data.title, data.message)\r\n        setSubmit(true)\r\n    }\r\n    if (isSubmited) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <Typography variant={\"h3\"}>\r\n                Add post page\r\n            </Typography>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <label>\r\n                            Title\r\n                            <input {...register(\"title\")}/>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Post\r\n                            <input {...register(\"message\")}/>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input type={\"submit\"} value={\"Add post\"}/>\r\n                    </div>\r\n                </form>\r\n            <NavLink to={'/blog'}>\r\n                <Button  variant=\"contained\" color=\"primary\">Back</Button>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;","import React from 'react';\r\nimport {MessageType} from \"../../App\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {Button, Typography} from \"@material-ui/core\";\r\n\r\nexport type PostPropsType = {\r\n    posts: Array<MessageType>\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n\r\n    const {postId} = useParams<{ postId?: string }>()\r\n    const currentPost = props.posts.find(post => post.id === postId)\r\n    return (\r\n        <div className=\"main\">\r\n            <Typography variant={\"h3\"}>\r\n               Post page\r\n            </Typography>\r\n            <div>\r\n                <div>\r\n                    Title: {currentPost?.title}\r\n                </div>\r\n                <div>\r\n                    Post: {currentPost?.message}\r\n                </div>\r\n                <div>\r\n                    Post created: {currentPost?.date.toLocaleString()}\r\n                </div>\r\n                <NavLink to={'/blog'}>\r\n                    <Button variant=\"contained\" color=\"primary\">Back</Button>\r\n                </NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './Component404.css';\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nconst Component404 = () => {\r\n  return (\r\n      <div className=\"Component404\">\r\n          <Typography variant=\"h1\">\r\n              404: Page not found!\r\n          </Typography>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Component404;\r\n","import React, {useReducer} from 'react';\r\nimport Blog from \"./components/Blog/Blog\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport CreatePost from \"./components/CreatePost/CreatePost\";\r\nimport Post from \"./components/Post/Post\";\r\nimport Component404 from \"./components/404/Component404\";\r\nimport {v1} from 'uuid';\r\n\r\n\r\nconst ADD_POST = \"ADD_POST\"\r\n\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    title: string\r\n    message: string\r\n    date: Date\r\n}\r\n\r\nconst initialState: Array<MessageType> = [\r\n    {id:v1(), title:\"First Post\", message: \"This is my first post\", date: new Date()},\r\n    {id:v1(), title:\"Second Post\", message: \"This is my second post\", date: new Date()},\r\n    {id:v1(), title:\"Third Post\", message: \"This is my third post\", date: new Date()},\r\n];\r\n\r\nfunction reducer(state: Array<MessageType>, action: AddTaskActionType) {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {id:v1(), title:action.title, message: action.message, date: new Date()}\r\n            return [...state, newPost];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport type AddTaskActionType = {\r\n    type: typeof ADD_POST\r\n    title: string\r\n    message: string\r\n}\r\nexport const addTaskAC = (title: string, message: string): AddTaskActionType => {\r\n    return {type: ADD_POST, title: title, message: message}\r\n}\r\n\r\nfunction App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const onAddMessage = (title: string, message: string) => {\r\n        debugger\r\n        dispatch(addTaskAC(title, message))\r\n    }\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={'/blog'}/>}/>\r\n                <Route path={\"/blog\"} render={() => <Blog posts={state}/>}/>\r\n                <Route path={\"/create_post\"} render={() => <CreatePost addPost={onAddMessage}/>}/>\r\n                <Route path={\"/post/:postId\"} render={() => <Post posts={state}/>}/>\r\n                <Route path={\"/404\"} render={() => <Component404/>}/>\r\n                <Redirect from={'*'} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <App />\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}